generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  clerkUserId   String   @unique
  name          String
  email         String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relationships
  orders        Order[]
  cart          Cart?
}

model Cart {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])

  items     CartItem[] 
}

model CartItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  cartId    Int
  productId Int

  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@unique([cartId, productId])
}

model Order {
  id          Int      @id @default(autoincrement())
  totalAmount Float
  status      String   
  address      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  items       OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  price     Float
  orderId   Int
  productId Int

  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  categories  ProductCategory[] 
  cartItems   CartItem[] 
  orders      OrderItem[]
}

model ProductCategory {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  products  Product[]
}
